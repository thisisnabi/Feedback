// <auto-generated />
using System;
using Feedback.APIs.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Feedback.APIs.Persistence.Migrations
{
    [DbContext(typeof(FeedbackDbContext))]
    [Migration("20241003121407_InitDbContext")]
    partial class InitDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Feedback.APIs.Models.Domain.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ExpiredOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("Feedback.APIs.Models.Domain.Subject", b =>
                {
                    b.OwnsMany("Feedback.APIs.Models.Domain.Review", "Reviews", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasMaxLength(400)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(400)");

                            b1.Property<DateTime>("Date")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("datetime2")
                                .HasDefaultValueSql("GETDATE()");

                            b1.Property<string>("ReviewerName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<int>("SubjectId")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("SubjectId");

                            b1.ToTable("Reviews", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SubjectId");
                        });

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
